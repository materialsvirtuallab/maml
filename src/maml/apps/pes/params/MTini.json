{"Abinitio": {"name": "abinitio", "comment": "# <0-5>\t\tDefines Ab-initio model", "0": {"name": "# 0 - no Ab-initio model", "comment": "#\t\t\tIf Ab-initio model is not required"}, "1": {"name": "# 1 - EFS data should be provided", "comment": "#\t\t\tUsed if driver provides EFS data with configurations. No additional EFS calculation is performed"}, "2": {"name": "# 2 - use embedded Liennard-Jones pair potential", "comment": "#\t\t\tCan be used for testing", "r_min": {"name": "Abinitio:LJ:r_min", "comment": "# <double>\tDistance to minimum of pair function (in Angstroms)", "value": 2.0}, "scale": {"name": "Abinitio:LJ:scale", "comment": "# <double>\tValue of pair function in minimum (in eV)", "value": 1.0}, "cutoff": {"name": "Abinitio:LJ:cutoff", "comment": "# <double>\tCut-off radius (in Angstroms)", "value": 5.0}}, "3": {"name": "# 3 - VASP", "comment": "#\t\t\tUse DFT model by VASP. Linking via files exchange", "POSCAR": {"name": "Abinitio:VASP:POSCAR", "comment": "# <string>\tHint: Path can be specified here", "value": "vasp_tmp/POSCAR"}, "OUTCAR": {"name": "Abinitio:VASP:OUTCAR", "comment": "# <string>\tHint: Path can be specified here", "value": "vasp_tmp/OUTCAR"}, "Start_command": {"name": "Abinitio:VASP:Start_command", "comment": "# <string>\tCommand to environment for starting VASP (Hint: it can be useful to specify here the command for launching a script that launches VASP)", "value": "./vasp"}}, "4": {"name": "# 4 - LAMMPS", "comment": "#\t\t\tUse potentials clculating by LAMMPS. Linking via files exchange", "Input_file": {"name": "Abinitio:LAMMPS:Input_file", "comment": "# <string>\tFile with configuration to be read by lammps", "value": "dump.inp"}, "Output_file": {"name": "Abinitio:LAMMPS:Output_file", "comment": "# <string>\tFile with configuration and EFS data to be read by MLIP", "value": "dump.out"}, "Start_command": {"name": "Abinitio:LAMMPS:Start_command", "comment": "# <string>\tCommand to environment for starting LAMMPS (Hint: it can be useful to specify here the command for launching a script that launches LAMMPS)", "value": "./lmp.sh"}}, "5": {"name": "# 5 - use pre-trained MTP", "comment": "#\t\t\tUse MTP as Ab-initio potential", "MTP_filename": {"name": "Abinitio:MTP:Filename", "comment": "# <string>\tMTP file name", "value": "MTP.mtp"}}}, "MLIP": {"name": "mlip", "comment": "# <string>\tFilename with MTP. If not specified driver operates directly with Ab-Initio model (without additional routines)", "Calculate_EFS": {"name": "calculate-efs", "comment": "# <bool>\tEnables/disables EFS calculation by MTP (disabled learning may be useful in pure learning/selection regime for best performance)"}, "Fit": {"name": "MLIP:Fit", "comment": "# <bool>\tEnables/disables MTP learning", "Save": {"name": "mlip:fit:save", "comment": "# <string>\tOutput MTP file name (for trained MTP)", "value": "fitted.mtp"}, "Energy_equation_weight": {"name": "mlip:fit:energy-weight", "comment": "# <double>\tWeight for energy equation in fitting procedure", "value": 1.0}, "Forces_equation_weight": {"name": "mlip:fit:force-weight", "comment": "# <double>\tWeight for forces equations in fitting procedure", "value": 0.001}, "Stress_equation_weight": {"name": "mlip:fit:stress-weight", "comment": "# <double>\tWeight for stresses equations in fitting procedure", "value": 0.1}, "Relative_forces_weight": {"name": "mlip:fit:scale-by-force", "comment": "# <double>\tIf greater than zero, large forces will be fitted less accurate than small", "value": 0.0}, "Fit_log": {"name": "mlip:fit:log", "comment": "# <string>\tWhere to write fitting log. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": ""}}, "Select": {"name": "MLIP:Select", "comment": "# <bool>\tActivates/deactivates selection (active learning engine)", "Site_E_weight": {"name": "MLIP:Select:Site_E_weight", "comment": "# <double>\tWeight for site energy equations in selection procedure", "value": 1.0}, "Energy_weight": {"name": "MLIP:Select:Energy_weight", "comment": "# <double>\tWeight for energy equation in selection procedure", "value": 0.0}, "Forces_weight": {"name": "MLIP:Select:Forces_weight", "comment": "# <double>\tWeight for forces equations in selection procedure", "value": 0.0}, "Stress_weight": {"name": "MLIP:Select:Stress_weight", "comment": "# <double>\tWeight for stresses equations in selection procedure", "value": 0.0}, "Threshold_slct": {"name": "MLIP:Select:Threshold_slct", "comment": "# <double>\tSelection threshold - maximum allowed extrapolation level", "value": 0.1}, "Save_TS": {"name": "MLIP:Select:Save_TS", "comment": "# <string>\tSelected configurations will be saved in this file after selection is complete. No configuration saving if not specified", "value": "stdout"}, "Save_state": {"name": "MLIP:Select:Save_state", "comment": "The state of the selection will be saved in this file after selection is complete. No saving if not specified. Can be used for further continue selection/learning on the fly", "value": ""}, "Load_state": {"name": "MLIP:Select:Load_state", "comment": "# <string>\tThe state of the selection will be loaded from this file before selection starts. No saving if not specified. Used to continue selection/learning on the fly", "value": ""}, "Select_log": {"name": "MLIP:Select:Log", "comment": "# <string>\tWhere to write selection log. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": ""}}, "LOFT": {"EFSviaMTP": {"name": "MLIP:LOTF:EFSviaMTP", "comment": "# <bool>\t\"0\" - pass to driver ab-initio EFS while LOTF when learning occurs, \"1\" - only MTP-calculated EFS will be passed to driver. (Works only in LOTF regime)"}, "Log": {"name": "MLIP:LOTF:Log", "comment": "# <string>\tWhere to write log of learning on the fly process. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": "lotf.log"}}, "Check_errors": {"name": "MLIP:Check_errors", "comment": "# <bool>\t\"1\" enables comparison and accumulation of error statistics for EFS calculated by ab-initio model and MTP. Requires specified ab-initio model", "Check_errors_log": {"name": "MLIP:Check_errors:Log", "comment": "# <string>\tWhere to write log of learning on the fly process. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": "errors.log"}}, "Write_cfgs": {"name": "write-cfgs", "comment": "# <string>\tFile for writing all processed configurations. No configuration recording if not specified", "value": "record.cfgs", "Skip_N": {"name": "MLIP:Write_cfgs:Skip_N", "comment": "# <int>\tSkip this number of configurations while writing", "value": 0}}, "Log": {"name": "MLIP:Log", "comment": "# <string>\tWhere to write MLIP log. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": "mlip.log"}, "load_from": {"name": "mlip:load-from", "comment": "# <string>      Filename with MTP. If not specified driver operates directly with Ab-Initio model (without additional routines)"}}, "Driver": {"name": "driver", "comment": "# <0-2>\t\tDefines the configuration driver. Makes no sense if external driver is attached", "0": {"name": "# 0 - no driver or external MD driver (e.g. LAMMPS)", "comment": ""}, "1": {"name": "# 1 - read configurations from database file", "comment": "", "Database_filename": {"name": "driver:cfg-reader:filename", "comment": "# <string>\tConfiguration file name", "value": "Li_NVT300.cfgs"}, "Max_count": {"name": "Driver:Database:Max_count", "comment": "# <int>\t\tMaximal number of configurations to read", "value": ""}, "Database_log": {"name": "driver:cfg-reader:log", "comment": "# <string>\t Where to write reading log. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": ""}}, "2": {"name": "# 2 - relaxation", "comment": "#\t\t\tEmbedded algorithm for relaxation", "Pressure": {"name": "Driver:Relaxation:Pressure", "comment": "# <double>\tExternal pressure (in GPa). If not zero enthalpy is minimized", "value": 0.0}, "Iteration_limit": {"name": "Driver:Relaxation:Iteration_limit", "comment": "# <int>\t\tMaximal number of iteration of the relaxation process", "value": 500}, "Min_dist": {"name": "Driver:Relaxation:Min_dist", "comment": "# <double>\tMinimal interatomic distance constraint (in Angstroms)", "value": 1.0}, "Forces_tolerance": {"name": "Driver:Relaxation:Forces_tolerance", "comment": "# <double>\tForces on atoms in relaxed configuration should be smaller than this value (in eV/Angstroms). Zero or negative value disables atoms relaxation (changing fractional coordinates of atoms)", "value": 0.0001}, "Stress_tolerance": {"name": "Driver:Relaxation:Stress_tolerance", "comment": "# <double>\tStresses in relaxed configuration should be smaller than this value (in GPa). Zero or negative value disables supercell relaxation (changing lattice vectors of the supercell)", "value": 0.001}, "Max_step": {"name": "Driver:Relaxation:Max_step", "comment": "# <double>\tMaximal allowed displacement of atoms and lattice vectors in Cartesian coordinates (in Angstroms)", "value": 0.5}, "Min_step": {"name": "Driver:Relaxation:Min_step", "comment": "# <double>\tMinimal displacement of atoms and lattice vectors in Cartesian coordinates (in Angstroms). If allactual displacements are lesser than relaxation stops", "value": 1e-08}, "BFGS_Wolfe_C1": {"name": "Driver:Relaxation:BFGS_Wolfe_C1", "comment": "# <double>\tWolfe condition constant on the function decrease (linesearch stopping criteria)", "value": 0.001}, "BFGS_Wolfe_C2": {"name": "Driver:Relaxation:BFGS_Wolfe_C2", "comment": "# <double>\tWolfe condition constant on the gradient decrease (linesearch stopping criteria)", "value": 0.7}, "Input_cfgs_filename": {"name": "Driver:Relaxation:Input_cfgs_filename", "comment": "", "value": "4Relax.cfg"}, "Save_relaxed": {"name": "Driver:Relaxation:Save_relaxed", "comment": "# <string>\tFilename for output results of relxation (configurations). No configuration will be saved if not specified", "value": "relaxed.cfgs"}, "Relaxation_log": {"name": "Driver:Relaxation:Log", "comment": "# <string>\tWhere to write relaxation log. No logging if not specified; if \"stdout\" and \"stderr\" corresponds to standard output streams; otherwise log will be outputted to file with that name", "value": "relaxation.log"}}}}
